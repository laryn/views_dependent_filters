<?php
/**
 * @file views_dependent_filters.module
 * Provides a Views exposed filter which makes other filters depend on values
 * in yet further filters for their visiblity and processing.
 * For example: if the 'node type' filter is set to 'article', show a filter for
 * a field that is only present on articles.
 */

/**
 * Implements hook_autoload_info().
 */
function views_dependent_filters_autoload_info() {
  return array(
    'views_dependent_filters_handler_filter_dependent' => 'views/views_dependent_filters_handler_filter_dependent.inc',
  );
}

/**
 * Implements hook_views_api().
 */
function views_dependent_filters_views_api() {
  return array(
    'api' => 3,
    'path' => backdrop_get_path('module', 'views_dependent_filters') . '/views',
  );
}

/**
 * After build form processor for the views exposed form.
 *
 * This is added by the exposed filter handler so that we can add a #states
 * visiblity dependency.
 */
function views_dependent_filters_exposed_form_after_build($form, $form_state) {
  // For reasons I don't understand and haven't time to dig into now, this
  // is called twice when the exposed filter form is shown in a block, the
  // first time without our expected key. Hence just skip it in that case.
  if (!isset($form_state['dependent_exposed_filters'])) {
    return $form;
  }

  // We may have multiple dependency info arrays from more than one copies
  // of the views_dependent_filters_handler_filter_dependent handler.
  if (!empty($form_state['dependent_exposed_filters'])) {
    $states_value = array();
    foreach ($form_state['dependent_exposed_filters'] as $dependency_info) {
      // Build up the #states item to put onto each dependent element.
      $form_states = array();
      foreach ($dependency_info['controllers'] as $controller_filter_id => $controller_values) {
        $controller_identifier = $dependency_info['identifiers'][$controller_filter_id];
        // Regular form.
        $count = 0;
        foreach ($controller_values as $controller_value) {
          if ($count > 0) {
            $states_value[] = 'or';
          }
          $states_value[':input[name="' . $controller_identifier . '"]'] = array('value' => $controller_value);
          $count ++;
        }
        $form_states['visible'] = $states_value;
        // Better Exposed Filters form. 
        // TODO: Testing after converting to #states (if BEF is ported yet)
        /*
        foreach ($controller_values as $value) {
          $key = $controller_identifier . '-' . $value;
          $form_states[$key] = array(TRUE);
        }
        */
      }
      // Set the #states on each form element as required.
      foreach ($dependency_info['dependents'] as $dependent_filter_id) {
        $dependent_identifier = $dependency_info['identifiers'][$dependent_filter_id];
        if (!isset($form[$dependent_identifier]['#states'])) {
          $form[$dependent_identifier]['#states'] = array();
        }
        $form[$dependent_identifier]['#states'] = array_merge_recursive($form[$dependent_identifier]['#states'], $form_states);
      }
    }
  }
  return $form;
}
